<?php
/**
 * @file
 */
  
/**
 * Implements hook_menu().
 */
function simpler_mobile_redirect_menu() {
  $items['admin/config/system/simpler_mobile_redirect'] = array(
    'title' => 'Simpler Mobile Redirect',
    'description' => 'Setup site settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simpler_mobile_redirect_admin_settings_form'),
    'access arguments' => array('administer simpler mobile'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'simpler_mobile_redirect.admin.inc',
    );

  return $items;
}

/**
 * Implements hook_permission().
 */
function simpler_mobile_redirect_permission() {
  return array(
    'administer simpler mobile' => array(
      'title' => t('Administer Simpler Mobile Redirect'),
      'description' => t('Alter redirect paths for different mobile devices.'),
    ),
  );
}


/**
 * Function to set the redirect cookie.
 */
function _simpler_mobile_redirect_setcookie($location, $redirect = FALSE) {
  global $base_url;
  global $cookie_domain;

  if (!is_null($location)) {
    $location = ltrim($location, '/');

    // check to see if the redirect is an external redirect
    if (strpos($location, '://') === FALSE) {
      $location = $base_url . '/' . $location;
    }
  }

  // Split up the URL for evaluation against the base URL.
  $parsed_url = parse_url($location);

  // Check to see if we are redirecting and then check to see if we are not there already.
  if ($redirect && $parsed_url['scheme'] . '://' . $parsed_url['host'] != $base_url) {
    simpler_mobile_redirect_redirect($location);
  }
  return;
}

/**
 * Redirect function
 */
function simpler_mobile_redirect_redirect($location) {
  // If there are additional parameters we redirect the
  // user to the alternate domain keeping parameters intact.
  if ($_GET['q']) {
    $location .= '/' . $_GET['q'];
  }
  if($_GET['nomobi']) {
    $location .= '?nomobi='.$_GET['nomobi']; 
  }
  // drupal_goto() does not exist here, as we are triggering at boot.
  header('Location: ' . $location, TRUE, 302);
  exit();
}

/**
 * Implements hook_boot().
 *
 * Running the checks in hook_boot() because we need to beat the cache.
 */
function simpler_mobile_redirect_boot() {
  global $base_url;
  global $cookie_domain;
  // If the user has just exercised their right to view the non-mobile site,
  // respect this and alter their cookie. They will encounter hook_boot
  // for a second time, will then have their cookie evaluated below as non-mobile.
  if (isset($_GET['nomobi']) && $_GET['nomobi'] == 'true') {
    $nonmobile = variable_get('simpler_mobile_redirect_home', '');
    setcookie("nomobi", 'true', 0, '/', $cookie_domain);
    _simpler_mobile_redirect_setcookie($nonmobile, TRUE);
    return;
  }

  //nomobi=false means _GIVE_ me the mobile site. Irrespective of what browser I am. default to iphone
  elseif (isset($_GET['nomobi']) && $_GET['nomobi'] == 'false') {
    setcookie ("nomobi", NULL, -1, "/", $cookie_domain);
    unset($_COOKIE['nomobi']);
    $mobilesite = _get_mobile_redirect();
    if($mobilesite == '')
      $mobilesite = variable_get('simpler_mobile_redirect_iphone', '');

    if($mobilesite != '')
      _simpler_mobile_redirect_setcookie($mobilesite, TRUE);
    return; 
  }

  if(isset($_COOKIE['nomobi']) && $_COOKIE['nomobi'] == 'true') {
    return; //no redirect requested
  }
  // If the user is coming to the site for the first time.
  // Detect their browser and find out where they should be sent.
  else {
    $simplemobileredirect = _get_mobile_redirect();

    //do nothing
    if($simplemobileredirect == '') return;

    // Set the cookie and redirect the user to the correct location
    _simpler_mobile_redirect_setcookie($simplemobileredirect, TRUE);
  }
  return;
} 

function _get_mobile_redirect() {
  // get the user agent
  $user_agent = $_SERVER['HTTP_USER_AGENT'];
  $simplemobileredirect = '';
  // using a switch to check for the user agent, smoother than a series of if's
  switch (TRUE) {
    // find the word ipad in the user agent
    case (preg_match('/ipad/i', $user_agent)):
      $simplemobileredirect = variable_get('simpler_mobile_redirect_ipad', '');
    break;

    // find the word iphone in the user agent
    case (preg_match('/ipod/i', $user_agent) || preg_match('/iphone/i', $user_agent)):
      $simplemobileredirect = variable_get('simpler_mobile_redirect_iphone', '');
    break;

    // we find android in the user agent
    case (preg_match('/android/i', $user_agent)):
      $simplemobileredirect = variable_get('simpler_mobile_redirect_android', '');
    break;

    // we find opera mini in the user agent
    case (preg_match('/opera mini/i', $user_agent)):
      $simplemobileredirect = variable_get('simpler_mobile_redirect_opera', '');
    break;

    // we find blackberry in the user agent
    case (preg_match('/blackberry/i', $user_agent)):
      $simplemobileredirect = variable_get('simpler_mobile_redirect_blackberry', '');
    break;

    // we find palm os in the user agent
    case (preg_match('/(pre\/|palm os|palm|hiptop|avantgo|plucker|xiino|blazer|elaine)/i', $user_agent)):
      $simplemobileredirect = variable_get('simpler_mobile_redirect_palm', '');
    break;

    // we find windows mobile in the user agent - the i at the end makes it case insensitive
    case (preg_match('/(iris|3g_t|windows ce|opera mobi|windows ce; smartphone;|windows ce; iemobile)/i', $user_agent)):
      $simplemobileredirect = variable_get('simpler_mobile_redirect_windows', '');
    break;

    // check if any of the values listed create a match on the user agent - these are some of the most common terms used in agents to identify them as being mobile devices
    case (preg_match('/(mini 9.5|vx1000|lge |m800|e860|u940|ux840|compal|wireless| mobi|ahong|lg380|lgku|lgu900|lg210|lg47|lg920|lg840|lg370|sam-r|mg50|s55|g83|t66|vx400|mk99|d615|d763|el370|sl900|mp500|samu3|samu4|vx10|xda_|samu5|samu6|samu7|samu9|a615|b832|m881|s920|n210|s700|c-810|_h797|mob-x|sk16d|848b|mowser|s580|r800|471x|v120|rim8|c500foma:|160x|x160|480x|x640|t503|w839|i250|sprint|w398samr810|m5252|c7100|mt126|x225|s5330|s820|htil-g1|fly v71|s302|-x113|novarra|k610i|-three|8325rc|8352rc|sanyo|vx54|c888|nx250|n120|mtk |c5588|s710|t880|c5005|i;458x|p404i|s210|c5100|teleca|s940|c500|s590|foma|samsu|vx8|vx9|a1000|_mms|myx|a700|gu1100|bc831|e300|ems100|me701|me702m-three|sd588|s800|8325rc|ac831|mw200|brew |d88|htc\/|htc_touch|355x|m50|km100|d736|p-9521|telco|sl74|ktouch|m4u\/|me702|8325rc|kddi|phone|lg |sonyericsson|samsung|240x|x320|vx10|nokia|sony cmd|motorola|up.browser|up.link|mmp|symbian|smartphone|midp|wap|vodafone|o2|pocket|kindle|mobile|psp|treo)/i', $user_agent)):
    // is the device showing signs of support for text/vnd.wap.wml or application/vnd.wap.xhtml+xml
    case (isset($_SERVER['HTTP_ACCEPT']) && (strpos($_SERVER['HTTP_ACCEPT'], 'text/vnd.wap.wml') > 0) || (strpos($_SERVER['HTTP_ACCEPT'], 'application/vnd.wap.xhtml+xml') > 0)):
    // is the device giving us a HTTP_X_WAP_PROFILE or HTTP_PROFILE header - only mobile devices would do this
    case (isset($_SERVER['HTTP_X_WAP_PROFILE']) || isset($_SERVER['HTTP_PROFILE'])):
      $simplemobileredirect = variable_get('simpler_mobile_redirect_mobileredirect', '');
    break;

    default:
      //$simplemobileredirect = variable_get('simpler_mobile_redirect_home', '');
      //pass - do nothing. 
    break;  
  }
  return $simplemobileredirect;
}
